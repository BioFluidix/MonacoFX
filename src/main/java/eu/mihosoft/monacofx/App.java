/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eu.mihosoft.monacofx;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;

public class App extends Application {

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) throws Exception {

        // create new monaco editor node
        MonacoFX monacoFX = new MonacoFX();
        StackPane root = new StackPane(monacoFX);

        // set initial text
        monacoFX.getEditor().getDocument().setText("[error: test]\n[info: test]\n[custom data]\n");

        // custom language support
        LanguageSupport myLang = new LanguageSupport() {
            @Override
            public String getName() {
                return "mylang";
            }

            @Override
            public FoldingProvider getFoldingProvider() {
                return editor1 ->
                        new Folding[]{
                            new Folding(5, 7),
                            new Folding(13, 17),
                            new Folding(19, 21)
                        };
            }

            @Override
            public MonarchSyntaxHighlighter getMonarchSyntaxHighlighter() {
                return () ->
                " 	tokenizer: {\n"+
                " 		root: [\n"+
                "           [/\\[error.*/, \"custom-error\"],\n"+
                " 			[/\\[notice.*/, \"custom-notice\"],\n"+
                " 			[/\\[info.*/, \"custom-info\"],\n"+
                " 			[/\\[[a-zA-Z 0-9:]+\\]/, \"custom-date\"],\n"+
                " 		],\n"+
                " 	}\n";
            }
        };

        // register custom language
        monacoFX.getEditor().registerLanguage(myLang);

        // define a theme for the language
        EditorTheme theme = new EditorTheme("mylangTheme","vs",false,
            new Rule("custom-info","808080"),
            new Rule("custom-error", "ff0000",  null, null, null, "bold"),
            new Rule("custom-date", "20ff00")
        );

        // register the theme
        monacoFX.getEditor().registerTheme(theme);

        // tell monaco to use our custom language and theme
        monacoFX.getEditor().setCurrentLanguage("mylang");
        monacoFX.getEditor().setCurrentTheme("mylangTheme");

        // or use a predefined language like 'c'
        //
        // monacoFX.getEditor().setCurrentLanguage("c");
        // monacoFX.getEditor().setCurrentTheme("vs");

        // the usual scene & stage setup
        Scene scene = new Scene(root, 800,600);
        primaryStage.setTitle("MonacoFX Demo");
        primaryStage.setScene(scene);
        primaryStage.show();
    }
}
